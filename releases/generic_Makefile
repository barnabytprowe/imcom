FC = gfortran -t -v
WARN= -Wall -Wextra -Wconversion -pedantic -fbounds-check
DEBUG= -g
OPENMP= -fopenmp
OPTIMIZE= -O3 -fexternal-blas
INCLUDE= -I/sw/include   # directory(s) to search for library include files
LIBDIR= -L/sw/lib        # directory(s) to search for library archives
LIBFITSIO= -lcfitsio     # link to cfitsio library
LIBFFTW3= -lfftw3        # link to FFTW3 library
LIBVEC= -lblas -llapack  # link to BLAS and LAPACK libraries
RM = rm
RMFLAGS = -f
MAKE = make
MAKEFLAGS = b
AR = ar
ARFLAGS = -crs


all: imcom

imcom: imcom.f90 imcom_data.o imcom_proc.o imcom_io.o imcom_matrix.o imcom_bisect.o
	$(FC) $(WARN) $(OPTIMIZE) $(OPENMP) $^ -o $@ $(LIBDIR) $(INCLUDE) $(LIBVEC) $(LIBFITSIO) $(LIBFFTW3)
	cp ./imcom /usr/local/bin/

imcom_bisect.o: imcom_bisect.f90 imcom_data.o imcom_proc.o imcom_io.o imcom_matrix.o
	$(FC) $(WARN) $(OPTIMIZE) $(OPENMP) -c $< -o $@

imcom_matrix.o: imcom_matrix.f90 imcom_data.o imcom_proc.o imcom_io.o
	$(FC) $(WARN) $(OPTIMIZE) $(OPENMP) -c $< -o $@

imcom_io.o : imcom_io.f90 imcom_data.o imcom_proc.o
	$(FC) $(WARN) $(OPTIMIZE) $(OPENMP) -c $< -o $@

imcom_proc.o : imcom_proc.f90 imcom_data.o
	$(FC) $(WARN) $(OPTIMIZE) $(OPENMP) -c $< -o $@

imcom_data.o : imcom_data.f90
	$(FC) $(WARN) $(OPTIMIZE) $(OPENMP) -c $< -o $@

# Run 'make libimcom.a' if you want to link to precompiled IMCOM object files from another project,
# although note you will probably also need to add soft links to the .mod files that you will find
# in this directory after compiling IMCOM...
libimcom.a : imcom_data.o imcom_proc.o imcom_io.o imcom_matrix.o imcom_bisect.o
	$(AR) $(ARFLAGS) $@ $^
	cp ./libimcom.a /usr/local/lib/

clean :
	$(RM) $(RMFLAGS) *.o *.mod imcom
